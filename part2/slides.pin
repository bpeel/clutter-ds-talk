#!/usr/bin/env pinpoint

-- [sofa.jpg]

Multi-texturing with Cogl

# - I'm going to do a quick demonstration of how you can use Cogl to
#   do some fancy painting for your custom ClutterActors
#
# - Cogl is a 3D drawing API designed to work like a modular stateless
#   wrapper on top of GL. All drawing in Clutter is ultimately done
#   via Cogl.
#
# - It's not supposed to be as high level as something like Cairo, but
#   instead it exposes only the features that GPUs can do well.

-- [two-windows.jpg]

Windows

# To shoehorn the demo into a topic of 'Clutter everywhere' I'm going
# to do this demo on Windows.
#
# Clutter has had native support for Windows for a long time but it's
# usually a pain to get started because so far we've just been telling
# people to compile Clutter themselves.

-- [two-windows.jpg] [text-align=center]

# This week I made a one-click installer in a .msi file so now it
# should be pretty easy to get up and running. It includes all of the
# dependencies and headers needed to build a Clutter app. The deps are
# taken from the Tor binaries.

One-click Clutter Installer for Windows

.msi file

http://is.gd/clutter_installer

-- [plan.png] [top]

Plan

# Imagine we are making an image viewer

# We want to make an effect to transition between these two images

# We're going to make the second image grow in a circle with
# transparent edges from the center of the screen.

# To do this we will use a CoglMaterial. A material is inteded to be a
# persistent object representing a snapshot of the state needed to
# draw.

# We will add three layers two this material. The first two are these
# two images.

# Then there's a third image which only has an alpha component.

# We will use this to interpolate between these two images.

# For example, in this picture the black parts will display the first
# image and the white parts will display the second image.

# The parts in-between will be a blend of the pixels from both images.

# Will use a texture matrix on the third layer to make the circle
# start off really small and then grow as the animation progresses.

# This blending operation is something that GPUs are really good at,
# so this should be efficient on most platforms.

# -- Switch to Visual Studio. CODE! yay!

# We'll implement the effect with a custom actor.

# (show constructor)

# In the constructor we set up the material. This is only done
# once. The material represents a snapshot of the GL state needed to 
# render so once we have set this up we can let Cogl efficently switch
# to this state whenever we want to paint it.

# First two layers are the textures

# Third layer is the magic part.

# Here we specify the blend function to interpolate between the two
# previous layers. The third argument specifies where to get the
# interpolation value which is a number from 0 to 1.

# We tell it to take the value from the third texture which contains
# the circle image.

# There is a 'progress' property on the custom actor

# We use this value to set up the texture matrix whenever we paint

# (show update_progress function)

# Here we create a matrix with a scale based on the progress value and
# set it as the matrix for the third layer.

# (show paint)

# When we actually we can just select the material we created and draw
# a single rectangle. There is no overdraw here so each fragment is 
# calculated and only written to the framebuffer once.

# (show main function)

# Once we've setup this custom actor we can just use the normal
# Clutter animation framework to animate the transition

# So here's what it looks like

# (run demo!)

--

Attribution

# two-windows
# http://www.flickr.com/photos/bazylek/4470878353/

# viney-window
# http://www.flickr.com/photos/aunto/72676701/

# broken-window
# http://www.flickr.com/photos/dok1/3542146365/in/photostream/

# lots-windows
# http://www.flickr.com/photos/laenulfean/530061292/in/photostream/

# sofa
# http://www.flickr.com/photos/malevagotica/3626951756/

# ceiling cat
# http://www.flickr.com/photos/31246066@N04/5968563791/

# basement cat
# http://www.flickr.com/photos/alishav/4418604732/
